<?php

/**
 * BaseNoActionableItem
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property varchar $name
 * @property text $description
 * @property string $type
 * @property integer $user_id
 * @property sfGuardUser $sfGuardUser
 * @property Doctrine_Collection $NoActionableItemProjects
 * @property Doctrine_Collection $Informations
 * @property Doctrine_Collection $NoActionableItemFolders
 * @property Doctrine_Collection $NoActionableItemAttachments
 * 
 * @method varchar             getName()                        Returns the current record's "name" value
 * @method text                getDescription()                 Returns the current record's "description" value
 * @method string              getType()                        Returns the current record's "type" value
 * @method integer             getUserId()                      Returns the current record's "user_id" value
 * @method sfGuardUser         getSfGuardUser()                 Returns the current record's "sfGuardUser" value
 * @method Doctrine_Collection getNoActionableItemProjects()    Returns the current record's "NoActionableItemProjects" collection
 * @method Doctrine_Collection getInformations()                Returns the current record's "Informations" collection
 * @method Doctrine_Collection getNoActionableItemFolders()     Returns the current record's "NoActionableItemFolders" collection
 * @method Doctrine_Collection getNoActionableItemAttachments() Returns the current record's "NoActionableItemAttachments" collection
 * @method NoActionableItem    setName()                        Sets the current record's "name" value
 * @method NoActionableItem    setDescription()                 Sets the current record's "description" value
 * @method NoActionableItem    setType()                        Sets the current record's "type" value
 * @method NoActionableItem    setUserId()                      Sets the current record's "user_id" value
 * @method NoActionableItem    setSfGuardUser()                 Sets the current record's "sfGuardUser" value
 * @method NoActionableItem    setNoActionableItemProjects()    Sets the current record's "NoActionableItemProjects" collection
 * @method NoActionableItem    setInformations()                Sets the current record's "Informations" collection
 * @method NoActionableItem    setNoActionableItemFolders()     Sets the current record's "NoActionableItemFolders" collection
 * @method NoActionableItem    setNoActionableItemAttachments() Sets the current record's "NoActionableItemAttachments" collection
 * 
 * @package    EasyGtd
 * @subpackage model
 * @author     leobarrientosc
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseNoActionableItem extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('no_actionable_item');
        $this->hasColumn('name', 'varchar', 255, array(
             'type' => 'varchar',
             'notnull' => true,
             'length' => '255',
             ));
        $this->hasColumn('description', 'text', null, array(
             'type' => 'text',
             'notnull' => false,
             ));
        $this->hasColumn('type', 'string', 30, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '30',
             ));
        $this->hasColumn('user_id', 'integer', 20, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => '20',
             ));

        $this->setSubClasses(array(
             'SomeDayMaybe' => 
             array(
              'type' => 'SOME_DAY_MAYBE',
             ),
             'Reference' => 
             array(
              'type' => 'REFERENCE',
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasMany('NoActionableItemProject as NoActionableItemProjects', array(
             'local' => 'id',
             'foreign' => 'no_actionable_item_id'));

        $this->hasMany('NoActionableItemInfo as Informations', array(
             'local' => 'id',
             'foreign' => 'no_actionable_item_id'));

        $this->hasMany('NoActionableItemFolder as NoActionableItemFolders', array(
             'local' => 'id',
             'foreign' => 'no_actionable_item_id'));

        $this->hasMany('NoActionableItemAttachment as NoActionableItemAttachments', array(
             'local' => 'id',
             'foreign' => 'no_actionable_item_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'name',
             ),
             'name' => 'normalized_name',
             ));
        $this->actAs($timestampable0);
        $this->actAs($sluggable0);
    }
}