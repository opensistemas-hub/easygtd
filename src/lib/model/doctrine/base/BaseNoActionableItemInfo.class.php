<?php

/**
 * BaseNoActionableItemInfo
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property int $no_actionable_item_id
 * @property string $value
 * @property string $type
 * @property NoActionableItem $NoActionableItem
 * 
 * @method int                  getNoActionableItemId()    Returns the current record's "no_actionable_item_id" value
 * @method string               getValue()                 Returns the current record's "value" value
 * @method string               getType()                  Returns the current record's "type" value
 * @method NoActionableItem     getNoActionableItem()      Returns the current record's "NoActionableItem" value
 * @method NoActionableItemInfo setNoActionableItemId()    Sets the current record's "no_actionable_item_id" value
 * @method NoActionableItemInfo setValue()                 Sets the current record's "value" value
 * @method NoActionableItemInfo setType()                  Sets the current record's "type" value
 * @method NoActionableItemInfo setNoActionableItem()      Sets the current record's "NoActionableItem" value
 * 
 * @package    EasyGtd
 * @subpackage model
 * @author     leobarrientosc
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseNoActionableItemInfo extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('no_actionable_item_info');
        $this->hasColumn('no_actionable_item_id', 'int', 20, array(
             'type' => 'int',
             'notnull' => true,
             'length' => '20',
             ));
        $this->hasColumn('value', 'string', 120, array(
             'type' => 'string',
             'length' => '120',
             ));
        $this->hasColumn('type', 'string', 30, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '30',
             ));

        $this->setSubClasses(array(
             'TicklerDate' => 
             array(
              'type' => 'TICKLER_DATE',
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('NoActionableItem', array(
             'local' => 'no_actionable_item_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}