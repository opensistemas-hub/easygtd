<?php

/**
 * BaseNextAction
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property varchar $name
 * @property text $description
 * @property integer $next_action_state_id
 * @property integer $user_id
 * @property varchar $type
 * @property varchar $hash
 * @property integer $original
 * @property sfGuardUser $sfGuardUser
 * @property NextActionState $NextActionState
 * @property Doctrine_Collection $NextActionAttachments
 * @property Doctrine_Collection $Informations
 * @property Doctrine_Collection $RelatedStuffs
 * @property Doctrine_Collection $NextActionCriterias
 * @property Doctrine_Collection $NextActionProjects
 * 
 * @method varchar             getName()                  Returns the current record's "name" value
 * @method text                getDescription()           Returns the current record's "description" value
 * @method integer             getNextActionStateId()     Returns the current record's "next_action_state_id" value
 * @method integer             getUserId()                Returns the current record's "user_id" value
 * @method varchar             getType()                  Returns the current record's "type" value
 * @method varchar             getHash()                  Returns the current record's "hash" value
 * @method integer             getOriginal()              Returns the current record's "original" value
 * @method sfGuardUser         getSfGuardUser()           Returns the current record's "sfGuardUser" value
 * @method NextActionState     getNextActionState()       Returns the current record's "NextActionState" value
 * @method Doctrine_Collection getNextActionAttachments() Returns the current record's "NextActionAttachments" collection
 * @method Doctrine_Collection getInformations()          Returns the current record's "Informations" collection
 * @method Doctrine_Collection getRelatedStuffs()         Returns the current record's "RelatedStuffs" collection
 * @method Doctrine_Collection getNextActionCriterias()   Returns the current record's "NextActionCriterias" collection
 * @method Doctrine_Collection getNextActionProjects()    Returns the current record's "NextActionProjects" collection
 * @method NextAction          setName()                  Sets the current record's "name" value
 * @method NextAction          setDescription()           Sets the current record's "description" value
 * @method NextAction          setNextActionStateId()     Sets the current record's "next_action_state_id" value
 * @method NextAction          setUserId()                Sets the current record's "user_id" value
 * @method NextAction          setType()                  Sets the current record's "type" value
 * @method NextAction          setHash()                  Sets the current record's "hash" value
 * @method NextAction          setOriginal()              Sets the current record's "original" value
 * @method NextAction          setSfGuardUser()           Sets the current record's "sfGuardUser" value
 * @method NextAction          setNextActionState()       Sets the current record's "NextActionState" value
 * @method NextAction          setNextActionAttachments() Sets the current record's "NextActionAttachments" collection
 * @method NextAction          setInformations()          Sets the current record's "Informations" collection
 * @method NextAction          setRelatedStuffs()         Sets the current record's "RelatedStuffs" collection
 * @method NextAction          setNextActionCriterias()   Sets the current record's "NextActionCriterias" collection
 * @method NextAction          setNextActionProjects()    Sets the current record's "NextActionProjects" collection
 * 
 * @package    EasyGtd
 * @subpackage model
 * @author     leobarrientosc
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseNextAction extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('next_action');
        $this->hasColumn('name', 'varchar', 255, array(
             'type' => 'varchar',
             'notnull' => true,
             'length' => '255',
             ));
        $this->hasColumn('description', 'text', null, array(
             'type' => 'text',
             'notnull' => false,
             ));
        $this->hasColumn('next_action_state_id', 'integer', 20, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => '20',
             ));
        $this->hasColumn('user_id', 'integer', 20, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => '20',
             ));
        $this->hasColumn('type', 'varchar', 30, array(
             'type' => 'varchar',
             'notnull' => true,
             'length' => '30',
             ));
        $this->hasColumn('hash', 'varchar', 30, array(
             'type' => 'varchar',
             'notnull' => true,
             'length' => '30',
             ));
        $this->hasColumn('original', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => '1',
             ));

        $this->setSubClasses(array(
             'DoItNow' => 
             array(
              'type' => 'DO_IT_NOW',
             ),
             'DoASAP' => 
             array(
              'type' => 'DO_ASAP',
             ),
             'Delegated' => 
             array(
              'type' => 'DELEGATED',
             ),
             'Scheduled' => 
             array(
              'type' => 'SCHEDULED',
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasOne('NextActionState', array(
             'local' => 'next_action_state_id',
             'foreign' => 'id'));

        $this->hasMany('NextActionAttachment as NextActionAttachments', array(
             'local' => 'id',
             'foreign' => 'next_action_id'));

        $this->hasMany('NextActionInfo as Informations', array(
             'local' => 'id',
             'foreign' => 'next_action_id'));

        $this->hasMany('NextActionStuff as RelatedStuffs', array(
             'local' => 'id',
             'foreign' => 'next_action_id'));

        $this->hasMany('NextActionCriteria as NextActionCriterias', array(
             'local' => 'id',
             'foreign' => 'next_action_id'));

        $this->hasMany('NextActionProject as NextActionProjects', array(
             'local' => 'id',
             'foreign' => 'next_action_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}