<?php

/**
 * BaseNoActionableItemFolder
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $no_actionable_item_id
 * @property integer $folder_id
 * @property NoActionableItem $NoActionableItem
 * @property Folder $Folder
 * 
 * @method integer                getId()                    Returns the current record's "id" value
 * @method integer                getNoActionableItemId()    Returns the current record's "no_actionable_item_id" value
 * @method integer                getFolderId()              Returns the current record's "folder_id" value
 * @method NoActionableItem       getNoActionableItem()      Returns the current record's "NoActionableItem" value
 * @method Folder                 getFolder()                Returns the current record's "Folder" value
 * @method NoActionableItemFolder setId()                    Sets the current record's "id" value
 * @method NoActionableItemFolder setNoActionableItemId()    Sets the current record's "no_actionable_item_id" value
 * @method NoActionableItemFolder setFolderId()              Sets the current record's "folder_id" value
 * @method NoActionableItemFolder setNoActionableItem()      Sets the current record's "NoActionableItem" value
 * @method NoActionableItemFolder setFolder()                Sets the current record's "Folder" value
 * 
 * @package    EasyGtd
 * @subpackage model
 * @author     leobarrientosc
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseNoActionableItemFolder extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('no_actionable_item_folder');
        $this->hasColumn('id', 'integer', 20, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => '20',
             ));
        $this->hasColumn('no_actionable_item_id', 'integer', 20, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => '20',
             ));
        $this->hasColumn('folder_id', 'integer', 20, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => '20',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('NoActionableItem', array(
             'local' => 'no_actionable_item_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Folder', array(
             'local' => 'folder_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}