<?php

/**
 * BaseNextActionAttachment
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property varchar $value
 * @property integer $next_action_id
 * @property NextAction $NextAction
 * 
 * @method integer              getId()             Returns the current record's "id" value
 * @method varchar              getValue()          Returns the current record's "value" value
 * @method integer              getNextActionId()   Returns the current record's "next_action_id" value
 * @method NextAction           getNextAction()     Returns the current record's "NextAction" value
 * @method NextActionAttachment setId()             Sets the current record's "id" value
 * @method NextActionAttachment setValue()          Sets the current record's "value" value
 * @method NextActionAttachment setNextActionId()   Sets the current record's "next_action_id" value
 * @method NextActionAttachment setNextAction()     Sets the current record's "NextAction" value
 * 
 * @package    EasyGtd
 * @subpackage model
 * @author     leobarrientosc
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseNextActionAttachment extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('next_action_attachment');
        $this->hasColumn('id', 'integer', 20, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => '20',
             ));
        $this->hasColumn('value', 'varchar', 255, array(
             'type' => 'varchar',
             'notnull' => true,
             'length' => '255',
             ));
        $this->hasColumn('next_action_id', 'integer', 20, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => '20',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('NextAction', array(
             'local' => 'next_action_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'value',
             ),
             'name' => 'normalized_value',
             'type' => 'string',
             'length' => 255,
             ));
        $this->actAs($timestampable0);
        $this->actAs($sluggable0);
    }
}